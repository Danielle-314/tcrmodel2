BootStrap: docker
From: nvidia/cuda:11.2.2-cudnn8-runtime-ubuntu18.04

%post
# install dependencies
apt-get update && DEBIAN_FRONTEND=noninteractive TZ="America/Sao_Paulo" \
apt-get install -y --no-install-recommends \
    build-essential \
    cmake \
    cuda-command-line-tools-11-2 \
    git \
    hmmer \
    kalign \
    tzdata \
    wget \
&& rm -rf /var/lib/apt/lists/* \
&& apt-get autoremove -y \
&& apt-get clean

# compile and install HH-suite
git clone --branch v3.3.0 https://github.com/soedinglab/hh-suite.git /opt/hh-suite \
    && mkdir /opt/hh-suite/build \
    && cd /opt/hh-suite/build \
    && cmake -DCMAKE_INSTALL_PREFIX=/opt/hhsuite .. \
    && make -j 4 && make install \
    && ln -s /opt/hhsuite/bin/* /usr/bin \
    && cd \
    && rm -rf /opt/hh-suite

# install miniconda
wget -P /tmp \
    "https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh" \
    && bash /tmp/Miniconda3-latest-Linux-x86_64.sh -b -p /opt/conda \
    && rm /tmp/Miniconda3-latest-Linux-x86_64.sh

export PATH=/opt/conda/bin:$PATH

conda install -qy conda==23.5.0 python=3.10 \
    && conda install -y -c conda-forge -c bioconda \
      openmm=7.7.0 \
      cudatoolkit=11.2 \
      pdbfixer \
      pip \
      mock \
      anarci \
      absl-py=0.13.0 \
      && conda clean --all --force-pkgs-dirs --yes

cd /opt
git clone https://github.com/deepmind/alphafold
git -C /opt/alphafold reset --hard 032e2f2
wget -q -P /opt/alphafold/alphafold/common/ \
    https://git.scicore.unibas.ch/schwede/openstructure/-/raw/7102c63615b64735c4941278d92b554ec94415f8/modules/mol/alg/src/stereo_chemical_props.txt

pip3 install --upgrade pip --no-cache-dir \
    && pip3 install -r /opt/alphafold/requirements.txt --no-cache-dir \
    && pip3 install --upgrade --no-cache-dir \
      jax==0.3.25 \
      jaxlib==0.3.25+cuda11.cudnn805 \
      -f https://storage.googleapis.com/jax-releases/jax_cuda_releases.html \
    && pip3 install tensorflow==2.13.* --no-cache-dir

#Install MDanalysis with pip
pip3 install --upgrade MDAnalysis

#Setting up TCRmodel2
cd /opt
git clone https://github.com/piercelab/tcrmodel2

#change some paths
sed -i 's+data/databases/+/opt/tcrmodel2/data/databases/+g' /opt/tcrmodel2/scripts/parse_tcr_seq.py
sed -i 's+data/databases/+/opt/tcrmodel2/data/databases/+g' /opt/tcrmodel2/scripts/parse_tcr_seq_from_json.py
sed -i 's+data/templates/+/opt/tcrmodel2/data/templates/+g' /opt/tcrmodel2/scripts/pmhc_templates.py
sed -i 's+"[.]"+"/opt/tcrmodel2/"+g' /opt/tcrmodel2/run_tcrmodel2.py
sed -i 's+run_alphafold_tcrmodel2.3.py+/opt/tcrmodel2/run_alphafold_tcrmodel2.3.py+g' /opt/tcrmodel2/run_tcrmodel2.py
sed -i 's+simtk.openmm+openmm+g' /opt/tcrmodel2/alphafold/relax/amber_minimize.py
sed -i 's+simtk.openmm+openmm+g' /opt/tcrmodel2/alphafold/relax/amber_minimize.py
sed -i 's+from simtk import openmm+import openmm+g' /opt/tcrmodel2/alphafold/relax/amber_minimize.py
sed -i 's+from simtk import unit+from openmm import unit+g' /opt/tcrmodel2/alphafold/relax/amber_minimize.py
sed -i 's+simtk.openmm+openmm+g' /opt/tcrmodel2/alphafold/relax/utils.py
cd /opt/tcrmodel2/data/databases
tar -xvzf pdb_seqres.txt.tar.gz
cd -

# Add SETUID bit to the ldconfig binary so that non-root users can run it.
chmod u+s /sbin/ldconfig.real

%environment
export PATH=/opt/conda/bin:$PATH

%runscript
python3 /opt/tcrmodel2/run_tcrmodel2.py $@

%labels
    Maintainer "Helder/ Pierce Lab"
    Version "2.3.2"
    Release "1"
    Summary "TCRModel2"
    OS "ubuntu:18.04"
